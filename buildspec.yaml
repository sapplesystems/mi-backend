version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws --version
      # Normalize region if only AWS_REGION is set
      - |
        if [ -z "${AWS_DEFAULT_REGION:-}" ] && [ -n "${AWS_REGION:-}" ]; then
          export AWS_DEFAULT_REGION="$AWS_REGION"
        fi
      - export REPO_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME"
      - COMMIT_HASH=$(echo "${CODEBUILD_RESOLVED_SOURCE_VERSION:-latest}" | cut -c 1-7)
      - export IMAGE_TAG=${COMMIT_HASH:-latest}
      # Proper ECR login (no eval; use password-stdin)
      - aws ecr get-login-password --region "$AWS_DEFAULT_REGION" | \
        docker login --username AWS --password-stdin "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"

  build:
    commands:
      - echo "Build started on $(date)"
      - echo "Building Docker image $REPO_URI:$IMAGE_TAG"
      - docker pull "$REPO_URI:latest" || true
      - docker build --cache-from "$REPO_URI:latest" -t "$REPO_URI:latest" -t "$REPO_URI:$IMAGE_TAG" .

  post_build:
    commands:
      - echo "Build completed on $(date)"
      - echo "Pushing Docker images..."
      - docker push "$REPO_URI:latest"
      - docker push "$REPO_URI:$IMAGE_TAG"
      - echo "Writing image definitions..."
      - |
        cat > imagedefinitions.json <<EOF
        [{"name":"$CONTAINER_NAME","imageUri":"$REPO_URI:$IMAGE_TAG"}]
        EOF

artifacts:
  files:
    - imagedefinitions.json
