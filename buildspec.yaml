version: 0.2

phases:
  pre_build:
    commands:
      - echo "=== DIAG: Start PRE_BUILD ==="
      - echo "whoami: $(whoami)"
      - echo "uname: $(uname -a)"
      - echo "printenv (filtered):"
      - env | egrep 'AWS_|IMAGE_REPO_NAME|CONTAINER_NAME' | sort || true
      - echo "aws --version:"
      - aws --version || echo "DIAG: aws cli missing"
      - echo "docker --version:"
      - docker --version || echo "DIAG: docker cli missing (need docker-capable image + Privileged=ON)"
      - echo "DIAG: resolve region"
      - |
        if [ -z "${AWS_DEFAULT_REGION:-}" ] && [ -n "${AWS_REGION:-}" ]; then
          export AWS_DEFAULT_REGION="$AWS_REGION"
        fi
        echo "Using region: '${AWS_DEFAULT_REGION:-<unset>}'"
      - |
        if [ -z "${AWS_DEFAULT_REGION:-}" ]; then
          echo "DIAG: Region not set. Set AWS_DEFAULT_REGION or AWS_REGION in project env vars."
        fi
      - echo "DIAG: STS identity"
      - aws sts get-caller-identity || echo "DIAG: STS failed (role/creds issue)"
      - echo "DIAG: Build registry/repo URIs"
      - export REGISTRY_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
      - export REPO_URI="${REGISTRY_URI}/${IMAGE_REPO_NAME}"
      - echo "REGISTRY_URI=$REGISTRY_URI"
      - echo "REPO_URI=$REPO_URI"
      - echo "DIAG: check repo exists"
      - aws ecr describe-repositories --repository-names "${IMAGE_REPO_NAME}" --region "${AWS_DEFAULT_REGION}" || echo "DIAG: Repo not found"
      - echo "DIAG: try get-login-password"
      - aws ecr get-login-password --region "${AWS_DEFAULT_REGION}" >/tmp/ecrpass 2>/tmp/ecrpass.err || echo "DIAG: get-login-password failed (need ecr:GetAuthorizationToken)"
      - echo "DIAG: get-login-password stderr:"; cat /tmp/ecrpass.err || true
      - echo "DIAG: try docker login"
      - |
        if command -v docker >/dev/null 2>&1 && [ -s /tmp/ecrpass ]; then
          if ! docker login --username AWS --password-stdin "${REGISTRY_URI}" </tmp/ecrpass; then
            echo "DIAG: docker login failed"
          else
            echo "DIAG: docker login OK"
          fi
        else
          echo "DIAG: skipping docker login (docker missing or no password)"
        fi
      - echo "DIAG: compute image tag"
      - COMMIT_HASH="$(echo "${CODEBUILD_RESOLVED_SOURCE_VERSION:-latest}" | cut -c 1-7)"
      - IMAGE_TAG="${COMMIT_HASH:-latest}"
      - export IMAGE_TAG
      - echo "IMAGE_TAG=$IMAGE_TAG"
      - echo "=== DIAG: End PRE_BUILD ==="

  build:
    commands:
      - echo "=== DIAG: BUILD phase (no-op) ==="

  post_build:
    commands:
      - echo "=== DIAG: POST_BUILD phase (no-op) ==="
      - echo '[{"name":"'"$CONTAINER_NAME"'","imageUri":"'"$REPO_URI:$IMAGE_TAG"'"}]' > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
