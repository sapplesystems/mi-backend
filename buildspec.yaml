version: 0.2

phases:
  pre_build:
    commands:
      # Safer 'set' for shells without pipefail
      - set -e
      - (set -o pipefail) 2>/dev/null && set -o pipefail || echo "pipefail not supported; continuing"
      - echo "Logging in to Amazon ECR..."
      - aws --version

      # Normalize region
      - if [ -z "${AWS_DEFAULT_REGION:-}" ] && [ -n "${AWS_REGION:-}" ]; then export AWS_DEFAULT_REGION="$AWS_REGION"; fi
      - if [ -z "${AWS_DEFAULT_REGION:-}" ]; then echo "Region not set. Set AWS_DEFAULT_REGION or AWS_REGION." && exit 1; fi

      # Ensure account ID
      - if [ -z "${AWS_ACCOUNT_ID:-}" ]; then export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text); fi

      # Compose and print repo URI
      - export REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}
      - echo "REPOSITORY_URI=${REPOSITORY_URI}"

      # Hard check: fail if repo doesn't exist
      # Hard check with diagnostics (prints actual AWS error)
      - echo "Verifying ECR repo '${IMAGE_REPO_NAME}' in ${AWS_DEFAULT_REGION} for account ${AWS_ACCOUNT_ID}..."
      - |
        if ! aws ecr describe-repositories --repository-names "${IMAGE_REPO_NAME}"; then
          echo "----"
          echo "ECR repo check FAILED."
          echo "Common causes:"
          echo "  • Repo doesn't exist in ${AWS_DEFAULT_REGION}"
          echo "  • IMAGE_REPO_NAME is wrong/empty"
          echo "  • Missing permissions: need ecr:DescribeRepositories"
          echo "---- Context ----"
          echo "AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}"
          echo "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}"
          echo "IMAGE_REPO_NAME=${IMAGE_REPO_NAME}"
          echo "Caller identity:"
          aws sts get-caller-identity || true
          echo "List of repos (first 50) in ${AWS_DEFAULT_REGION}:"
          aws ecr describe-repositories --max-results 50 --query 'repositories[].repositoryName' --output text || true
          exit 1
        fi

      # Non-TTY safe ECR login
      - aws ecr get-login-password --region "$AWS_DEFAULT_REGION" | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com

      # Short SHA for tagging
      - export IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7}

  build:
    commands:
      - echo "Build started on $(date)"
      - echo "Building the Docker image..."
      - docker pull "$REPOSITORY_URI:latest" || true
      - docker build --cache-from "$REPOSITORY_URI:latest" -t "$REPOSITORY_URI:latest" -t "$REPOSITORY_URI:$IMAGE_TAG" .

  post_build:
    commands:
      - echo "Build completed on $(date)"
      - echo "Pushing the Docker images..."
      - docker push "$REPOSITORY_URI:latest"
      - docker push "$REPOSITORY_URI:$IMAGE_TAG"
      - echo "Writing image definitions file..."
      - printf '[{"name":"%s","imageUri":"%s"}]' "${CONTAINER_NAME:-app}" "$REPOSITORY_URI:$IMAGE_TAG" | tee imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
